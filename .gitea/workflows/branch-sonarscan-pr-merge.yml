name: Gitea Branch PR, SonarQube Analyze, and Merge Workflow

on:
  push:
    branches-ignore:
      - main
  create:
    branches: 
      - '**'

jobs:
  # Job 1: Check if PR exists and create one if the branch is new
  check-and-create-pr:
    name: Check and Create PR
    runs-on: ubuntu-latest
    outputs:
      pr_created: ${{ steps.check-pr.outputs.pr_created }}
      pr_index: ${{ steps.create-pr.outputs.pr_index }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 1: Check for an existing PR
      - name: Check if PR Exists
        id: check-pr
        run: |
          pr_http_status=$(curl ${{ vars.RINOA_GITEA_URL }}/api/v1/repos/${{ github.repository }}/pulls/main/${{ github.ref_name }} -X 'GET' -H 'accept: application/json' -H 'Authorization: ${{ secrets.BOT_GITEA_TOKEN }}' -w "%{http_code}" -s -o /dev/null)
          echo "pr_http_status=$pr_http_status" >> $GITHUB_OUTPUT

      # Step 2: Create PR if none exists
      - name: Create PR in Gitea
        if: steps.check_pr.outputs.pr_http_status == '404'
        id: create-pr
        uses: arifer612/Gitea-PR-action@v1.2.0
        with:
          url: ${{ vars.RINOA_GITEA_URL }}
          token: ${{ secrets.BOT_GITEA_TOKEN }}
          assignee: ${{ github.actor }}

  # # Job 2: Run SonarQube Analysis
  # sonarqube-analysis:
  #   runs-on: ubuntu-latest
  #   needs: check-and-create-pr
  #   outputs:
  #     quality_gate_status: ${{ steps.quality-gate.outputs.quality-gate-status }}
  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v4

  #     # Step 1: Run SonarQube Scan
  #     - name: SonarQube Scan
  #       uses: sonarsource/sonarqube-scan-action@v4.1.0
  #       env:
  #         SONAR_HOST_URL: ${{ secrets.SONARQUBE_HOST }}
  #         SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}

  #     # Step 2: SonarQube Quality Gate Check
  #     - name: SonarQube Quality Gate
  #       id: quality-gate
  #       uses: sonarsource/sonarqube-quality-gate-action@v1
  #       env:
  #         SONAR_HOST_URL: ${{ secrets.SONARQUBE_HOST }}
  #         SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}

  #     - name: Log Quality Gate Result
  #       run: |
  #         echo "Quality Gate Status: ${{ steps.quality-gate.outputs.quality-gate-status }}"

  # # Job 3: Merge PR if Quality Gate passes
  # merge-pr:
  #   runs-on: ubuntu-latest
  #   needs: [check-and-create-pr, sonarqube-analysis]
  #   if: needs.sonarqube-analysis.outputs.quality_gate_status == 'PASSED'
  #   steps:
  #     - name: Merge PR in Gitea
  #       uses: prasiman/gocurl@v1
  #       with:
  #         url: "${{ secrets.GITEA_INSTANCE_URL }}/repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/pulls/${{ needs.check-and-create-pr.outputs.pr_index }}"
  #         method: "POST"
  #         headers: '{ "Authorization": "token ${{ secrets.GITEA_API_TOKEN }}", "Content-Type": "application/json" }'
  #         params: >-
  #           {
  #             "Do": "merge",
  #             "delete_branch_after_merge": true,
  #             "force_merge": true,
  #             "merge_when_checks_succeed": true
  #           }

  #     - name: Confirm Merge
  #       run: echo "PR has been successfully merged into main."
