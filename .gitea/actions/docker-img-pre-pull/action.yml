name: "Pre-pull/build Docker images in parallel"
description: "Prepares services for docker compose dry-run by pulling or building them concurrently"
author: "Your Name <you@example.com>"

inputs:
  services:
    description: "Space-separated list of docker-compose services"
    required: true

runs:
  using: "composite"
  steps:
    - name: Pre-pull/build services
      shell: bash
      run: |
        set -euo pipefail

        SERVICES="${{ inputs.services }}"
        if [ -z "$SERVICES" ]; then
          echo "‚ùå No services provided. Exiting."
          exit 1
        fi

        echo "Services to process:"
        echo "$SERVICES"

        for svc in $SERVICES; do
        (
          echo "üîπ Starting prep for service: $svc"
          start_time=$(date +%s)

          # Get image name; default to empty string if missing
          image=$(docker compose config | yq -r ".services[\"$svc\"].image // \"\"")
          # Get build context; default to empty string if missing
          build_dir=$(docker compose config | yq -r ".services[\"$svc\"].build.context // \"\"")

          if [ -n "$image" ]; then
            echo "‚û°Ô∏è Pulling image for $svc: $image"
            if ! docker pull "$image"; then
              echo "‚ö†Ô∏è Failed to pull image $image for service $svc"
            fi
          elif [ -n "$build_dir" ]; then
            echo "‚öôÔ∏è Building service: $svc from context: $build_dir"
            if ! docker compose build "$svc"; then
              echo "‚ö†Ô∏è Failed to build service $svc"
            fi
          else
            echo "‚ö†Ô∏è No image or build context for $svc ‚Äî skipping"
          fi

          end_time=$(date +%s)
          duration=$((end_time - start_time))
          echo "‚úÖ Finished $svc in ${duration}s"
        ) &
        done

        wait
        echo "üéØ All services processed."
